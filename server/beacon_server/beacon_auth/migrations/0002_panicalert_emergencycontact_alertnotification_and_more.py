# Generated by Django 4.2.7 on 2025-08-16 13:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('beacon_auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PanicAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('panic_button', 'Panic Button'), ('shake_to_alert', 'Shake to Alert'), ('decoy_screen', 'Decoy Screen'), ('manual', 'Manual Trigger'), ('scheduled', 'Scheduled Alert')], default='panic_button', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('responding', 'Responding'), ('resolved', 'Resolved'), ('false_alarm', 'False Alarm'), ('canceled', 'Canceled')], default='active', max_length=20)),
                ('priority', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Critical'), (5, 'Emergency')], default=4, help_text='Alert priority level')),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('location_accuracy', models.FloatField(blank=True, help_text='GPS accuracy in meters', null=True)),
                ('address', models.TextField(blank=True, help_text='Reverse geocoded address')),
                ('description', models.TextField(blank=True, help_text='User description or automatic notes')),
                ('is_silent', models.BooleanField(default=False, help_text='Silent alert without notifications')),
                ('auto_call_emergency', models.BooleanField(default=False, help_text='Auto call emergency services')),
                ('operator_notes', models.TextField(blank=True, help_text='Operator internal notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('device_info', models.JSONField(blank=True, default=dict, help_text='Device and app information')),
                ('network_info', models.JSONField(blank=True, default=dict, help_text='Network connectivity info')),
                ('assigned_operator', models.ForeignKey(blank=True, help_text='Operator handling this alert', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_alerts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='panic_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('relationship', models.CharField(choices=[('primary', 'Primary Emergency Contact'), ('secondary', 'Secondary Emergency Contact'), ('family', 'Family Member'), ('friend', 'Friend'), ('medical', 'Medical Contact'), ('legal', 'Legal Contact')], default='primary', max_length=20)),
                ('notify_on_alert', models.BooleanField(default=True, help_text='Send notifications for alerts')),
                ('can_receive_location', models.BooleanField(default=True, help_text='Can receive location updates')),
                ('can_cancel_alert', models.BooleanField(default=False, help_text='Can cancel user alerts')),
                ('notes', models.TextField(blank=True, help_text='Additional information about contact')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['relationship', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Push Notification'), ('call', 'Phone Call'), ('webhook', 'Webhook')], max_length=20)),
                ('recipient', models.CharField(help_text='Phone, email, or user ID', max_length=255)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='beacon_auth.panicalert')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertMedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('media_type', models.CharField(choices=[('audio', 'Audio Recording'), ('video', 'Video Recording'), ('photo', 'Photo'), ('screenshot', 'Screenshot')], max_length=20)),
                ('file_path', models.FileField(blank=True, null=True, upload_to='alert_media/')),
                ('file_url', models.URLField(blank=True, help_text='Cloud storage URL')),
                ('file_size', models.BigIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('duration', models.DurationField(blank=True, help_text='Duration for audio/video', null=True)),
                ('upload_status', models.CharField(choices=[('pending', 'Pending Upload'), ('uploading', 'Uploading'), ('uploaded', 'Uploaded'), ('failed', 'Upload Failed')], default='pending', max_length=20)),
                ('uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('upload_error', models.TextField(blank=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('device_location', models.JSONField(blank=True, default=dict, help_text='Location when recorded')),
                ('is_encrypted', models.BooleanField(default=True)),
                ('access_key', models.CharField(blank=True, help_text='Encryption/access key', max_length=255)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='When media expires', null=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_files', to='beacon_auth.panicalert')),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('accuracy', models.FloatField(help_text='GPS accuracy in meters')),
                ('altitude', models.FloatField(blank=True, help_text='Altitude in meters', null=True)),
                ('speed', models.FloatField(blank=True, help_text='Speed in m/s', null=True)),
                ('heading', models.FloatField(blank=True, help_text='Direction in degrees', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('provider', models.CharField(default='gps', help_text='Location provider (gps, network, etc.)', max_length=20)),
                ('battery_level', models.IntegerField(blank=True, help_text='Device battery percentage', null=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to='beacon_auth.panicalert')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='panicalert',
            index=models.Index(fields=['status', 'created_at'], name='beacon_auth_status_ebd1f0_idx'),
        ),
        migrations.AddIndex(
            model_name='panicalert',
            index=models.Index(fields=['user', 'status'], name='beacon_auth_user_id_e49755_idx'),
        ),
        migrations.AddIndex(
            model_name='panicalert',
            index=models.Index(fields=['priority', 'created_at'], name='beacon_auth_priorit_2b8cf7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='emergencycontact',
            unique_together={('user', 'phone')},
        ),
        migrations.AddIndex(
            model_name='alertnotification',
            index=models.Index(fields=['alert', 'notification_type'], name='beacon_auth_alert_i_098725_idx'),
        ),
        migrations.AddIndex(
            model_name='alertnotification',
            index=models.Index(fields=['status', 'created_at'], name='beacon_auth_status_ec1a6e_idx'),
        ),
        migrations.AddIndex(
            model_name='alertlocation',
            index=models.Index(fields=['alert', 'timestamp'], name='beacon_auth_alert_i_3e0465_idx'),
        ),
    ]
