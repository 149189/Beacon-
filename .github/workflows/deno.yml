name: Beacon CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: beacon_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          pip install -r server/beacon_server/requirements.txt

      - name: Run migrations
        env:
          MYSQL_DB: beacon_db
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_HOST: 127.0.0.1
        run: |
          cd server/beacon_server
          python manage.py migrate

      - name: Run backend tests
        run: |
          cd server/beacon_server
          python manage.py test

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: |
          cd admin_client/beacon_user
          npm ci

      - name: Lint frontend
        run: |
          cd admin_client/beacon_user
          npm run lint

      - name: Build frontend
        run: |
          cd admin_client/beacon_user
          npm run build

  deno:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
            ~/.deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Lint Deno scripts
        run: deno lint

      - name: Test Deno scripts
        run: deno test --allow-all
